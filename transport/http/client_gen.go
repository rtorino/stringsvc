// Autogenerated code, do not change directly.
// To make changes to this file, please modify the templates at
// go-kit-middlewarer/tmpl/*.tmpl

package transport

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-kit/kit/endpoint"

	"github.com/wavecell/stringsvc"
)

var _ stringsvc.StringService

type clientStringService struct {
	uppercaseEndpoint endpoint.Endpoint
	countEndpoint     endpoint.Endpoint
}

// Uppercase implements github.com/wavecell/stringsvc.StringService
func (stringservice clientStringService) Uppercase(str string) (upper string, err error) {
	ctx, _ := context.WithTimeout(context.Background(), time.Second)

	request := uppercaseRequest{
		Str: str,
	}

	request.embedMime = new(embedMime)

	response, err := stringservice.uppercaseEndpoint(
		ctx,
		&request,
	)

	if err != nil {
		return
	}

	resp := response.(*uppercaseResponse)

	upper = resp.Upper
	err = resp.Err

	return
}

// Count implements github.com/wavecell/stringsvc.StringService
func (stringservice clientStringService) Count(str string) (count int) {
	ctx, _ := context.WithTimeout(context.Background(), time.Second)

	request := countRequest{
		Str: str,
	}

	request.embedMime = new(embedMime)

	response, err := stringservice.countEndpoint(
		ctx,
		&request,
	)

	if err != nil {
		return
	}

	resp := response.(*countResponse)

	count = resp.Count

	return
}
